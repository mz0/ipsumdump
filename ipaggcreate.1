.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IPAGGCREATE 1"
.TH IPAGGCREATE 1 "2014-05-02" "Version 1.86" " "
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ipaggcreate \- produce aggregate statistics of network traffic or trace
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ipaggcreate [\fB\-r\fR | \fB\-i\fR | \fB\-\-netflow\-summary\fR] [\fB\-\-src\fR, \fB\-\-dst\fR, \fB\-\-sport\fR, \fB\-\-dport\fR, ...] [other options] [\fIfiles\fR or \fIinterfaces\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBipaggcreate\fR program reads \s-1IP\s0 packets from one or more data sources,
maps each packet to a label (such as \*(L"source address 192.4.10.9\*(R" or \*(L"length
10\*(R"), and outputs a simply-formatted \*(L"aggregate\*(R" file reporting the number
of packets or bytes observed per label.  The resulting file is easy to
process with text-based tools.  (But see the \fB\-\-binary\fR option, which
generates a compressed, quick-to-process binary file.)
.PP
Here are a couple lines of \fBipaggcreate\fR output, from `ipaggcreate \-s
/home/kohler/largedump.gz':
.PP
.Vb 10
\&  !IPAggregate 1.0
\&  !creator "src/ipaggcreate \-s /home/kohler/largedump.gz"
\&  !counts packets
\&  !times 976937726.638704 977337361.804592 399635.165888
\&  !num_nonzero 1437
\&  !ip
\&  4.2.49.2 1
\&  4.2.49.4 1
\&  4.17.143.9 1
\&  4.21.203.29 104
.Ve
.PP
The `\fB\-s\fR' option, which is equivalent to `\fB\-\-src\fR', tells \fBipaggcreate\fR
to categorize each packet by its \fIs\fRource \s-1IP\s0 address.
`\fI/home/kohler/largedump.gz\fR' is a compressed \fItcpdump\fR\|(1) file.  Each data
line represents a label; the first field is the label number (here, an \s-1IP\s0
source address), and the second field the number of packets that had that
label.  Labels with 0 counts are not reported.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Data Sources"
.IX Subsection "Data Sources"
Data source options tell \fBipaggcreate\fR what kind of data source to use:
\&\fItcpdump\fR\|(1) raw-packet files (\fB\-\-tcpdump\fR), live network interfaces
(\fB\-\-interface\fR), NetFlow summary files (\fB\-\-netflow\-summary\fR),
\&\fBipsumdump\fR output files (\fB\-\-ipsumdump\fR), \s-1DAG\s0 or NLANR-formatted files
(\fB\-\-dag\fR, \fB\-\-nlanr\fR), or others.
.PP
Non-option arguments specify the files, or interfaces, to read. For
example, `ipaggcreate \fB\-r\fR eth0 eth1' will read two \fItcpdump\fR\|(1) files,
named \*(L"eth0\*(R" and \*(L"eth1\*(R"; `ipaggcreate \fB\-i\fR eth0 eth1' will read from two
live network interfaces, \*(L"eth0\*(R" and \*(L"eth1\*(R".
.PP
Options that read files read from the standard input when you supply a
single dash \f(CW\*(C`\-\*(C'\fR as a filename, or when you give no filenames at all.
.IP "\fB\-\-tcpdump\fR, \fB\-r\fR" 4
.IX Item "--tcpdump, -r"
Read from one or more files produced by \fItcpdump\fR\|(1)'s \fB\-w\fR option (also
known as \*(L"pcap files\*(R"). Stop when all the files are exhausted. This is the
default. Files (except for standard input) may be compressed by \fIgzip\fR\|(1) or
\&\fIbzip2\fR\|(1); \fBipsumdump\fR will uncompress them on the fly.
.IP "\fB\-\-interface\fR, \fB\-i\fR" 4
.IX Item "--interface, -i"
Read from live network interfaces. When run this way, \fBipsumdump\fR will
continue until interrupted with \s-1SIGINT\s0 or \s-1SIGHUP.\s0 When stopped,
\&\fBipsumdump\fR appends a comment to its output file, indicating how many
packets were dropped by the kernel before output.
.IP "\fB\-\-ipsumdump\fR" 4
.IX Item "--ipsumdump"
Read from one or more \fBipsumdump\fR files. Any packet characteristics not
specified by the input files are set to 0.
.IP "\fB\-\-format\fR=\fIformat\fR" 4
.IX Item "--format=format"
Read from one or more \fBipsumdump\fR files, using the specified default
format.  The \fIformat\fR should be a space-separated list of content types;
see ToIPSummaryDump(n) for a list.
.IP "\fB\-\-dag\fR[=\fIencap\fR]" 4
.IX Item "--dag[=encap]"
Read from one or more DAG-formatted trace files.  For new-style \s-1ERF\s0 dumps,
which contain encapsulation type information, just say \fB\-\-dag\fR.  For
old-style dumps, you must supply the right \fIencap\fR argument: \f(CW\*(C`ATM\*(C'\fR for
\&\s-1ATM RFC\-1483\s0 encapsulation (the most common), \f(CW\*(C`ETHER\*(C'\fR for Ethernet, \f(CW\*(C`PPP\*(C'\fR
for \s-1PPP, \s0\f(CW\*(C`IP\*(C'\fR for raw \s-1IP, \s0\f(CW\*(C`HDLC\*(C'\fR for Cisco \s-1HDLC, \s0\f(CW\*(C`PPP_HDLC\*(C'\fR for \s-1PPP
HDLC,\s0 or \f(CW\*(C`SUNATM\*(C'\fR for Sun \s-1ATM. \s0 See <http://dag.cs.waikato.ac.nz/>.
.IP "\fB\-\-nlanr\fR" 4
.IX Item "--nlanr"
Read from one or more NLANR-formatted trace files (fr, fr+, or tsh
format).  See <http://pma.nlanr.net/Traces/>.
.IP "\fB\-\-ip\-addresses\fR" 4
.IX Item "--ip-addresses"
Read files containing \s-1IP\s0 addresses, one address per line.  The label
must be either \-\-src or \-\-dst.
.IP "\fB\-\-tu\-summary\fR" 4
.IX Item "--tu-summary"
Read \s-1TCP/UDP\s0 summary files.  Each line represents one packet, and carries
the following information: timestamp, source address, source port,
destination address, destination port, protocol, payload length.  For
example:
.Sp
.Vb 2
\&  976937735.345744 18.26.4.9 22 64.55.139.202 26876 T 0
\&  976937770.197008 128.10.5.110 63749 64.55.139.202 113 T 5
.Ve
.IP "\fB\-\-bro\-conn\-summary\fR" 4
.IX Item "--bro-conn-summary"
Read Bro connection summary files.  Each line represents one connection
attempt, and carries the following information: timestamp, source address,
destination address, direction (inbound/outbound).
.IP "\fB\-\-netflow\-summary\fR" 4
.IX Item "--netflow-summary"
Read from one or more NetFlow summary files. These are line-oriented \s-1ASCII\s0
files; blank lines, and lines starting with '!' or '#', are ignored. Other
lines should contain 15 or more fields separated by vertical bars '|'.
\&\fBIpsumdump\fR pays attention to some of these fields:
.Sp
.Vb 10
\&  Field  Meaning                       Example
\&  \-\-\-\-\-  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-  \-\-\-\-\-\-\-\-\-\-
\&  0      Source IP address             192.4.1.32
\&  1      Destination IP address        18.26.4.44
\&  5      Packet count in flow          5
\&  6      Byte count in flow            10932
\&  7      Flow timestamp (UNIX\-style)   998006995
\&  8      Flow end timestamp            998006999
\&  9      Source port                   3917
\&  10     Destination port              80
\&  12     TCP flags (OR of all pkts)    18
\&  13     IP protocol                   6
\&  14     IP TOS bits                   0
.Ve
.IP "\fB\-\-tcpdump\-text\fR" 4
.IX Item "--tcpdump-text"
Read from one or more files containing \fItcpdump\fR\|(1) textual output.  It's
much better to use the binary files produced by 'tcpdump \fB\-w\fR', but if
someone threw those away and all you have is the \s-1ASCII\s0 output, you can
still make do.  Only works with tcpdump versions 3.7 and earlier.
.SS "Label"
.IX Subsection "Label"
These options determine how packets are labeled; you can supply at most
one.
.IP "\fB\-\-src\fR, \fB\-s\fR" 4
.IX Item "--src, -s"
Label by \s-1IP\s0 source address; all packets with the same source address
form an aggregate.
.IP "\fB\-\-dst\fR, \fB\-d\fR" 4
.IX Item "--dst, -d"
Label by \s-1IP\s0 destination address.  This is the default.
.IP "\fB\-\-length\fR, \fB\-l\fR" 4
.IX Item "--length, -l"
Label by \s-1IP\s0 length.
.IP "\fB\-\-ip\fR \fIfield\fR" 4
.IX Item "--ip field"
Label by the named \s-1IP\s0 field.  Examples include \f(CW\*(C`ip src\*(C'\fR (equivalent to
\&\fB\-\-src\fR), \f(CW\*(C`ip ttl\*(C'\fR, \f(CW\*(C`ip off\*(C'\fR, \f(CW\*(C`udp sport\*(C'\fR, and so forth.  See
\&\fIAggregateIP\fR\|(1) for a full list.
.IP "\fB\-\-flows\fR" 4
.IX Item "--flows"
Label by \s-1TCP\s0 or \s-1UDP\s0 flow, or, essentially, by end-to-end
transport-level connection.  Two packets have the same label if
and only if they are part of the same \s-1TCP\s0 or \s-1UDP\s0 connection.  Each flow is
assigned its own label.  The label number is not meaningful;
non\-TCP/UDP packets are ignored.
.IP "\fB\-\-unidirectional\-flows\fR" 4
.IX Item "--unidirectional-flows"
Label by unidirectional \s-1TCP\s0 or \s-1UDP\s0 flow.  Like \fB\-\-flows\fR, but packets
from a single connection but heading in different directions are assigned
different labels.
.IP "\fB\-\-address\-pairs\fR" 4
.IX Item "--address-pairs"
Label by address pair.  Two packets have the same label if
and only if they involve the same pair of \s-1IP\s0 addresses.  The label
number is not meaningful.
.IP "\fB\-\-unidirectional\-address\-pairs\fR" 4
.IX Item "--unidirectional-address-pairs"
Label by unidirectional address pair.  Two packets have the same
label if and only if their source addresses match and their destination
address match.
.SS "Measurement Options"
.IX Subsection "Measurement Options"
These options specify whether \fBipaggcreate\fR should count packets or bytes.
.IP "\fB\-\-packets\fR" 4
.IX Item "--packets"
Count packets: the output file will report the number of packets per label.
This is the default.
.IP "\fB\-\-bytes\fR, \fB\-B\fR" 4
.IX Item "--bytes, -B"
Count bytes: the output file will report the number of bytes per label.
This number includes \s-1IP\s0 and transport headers, but not any link headers.
.SS "Limit and Split Options"
.IX Subsection "Limit and Split Options"
These options select portions of the trace file, and allow the user to
split trace data into multiple aggregate files.
.IP "\fB\-\-time\-offset\fR=\fItime\fR, \fB\-T\fR \fItime\fR" 4
.IX Item "--time-offset=time, -T time"
Ignore the first \fItime\fR worth of packets in the input trace.  If the first
packet has timestamp T, then all packets (including the first) with
timestamp less than T+\fItime\fR are ignored.  The \fItime\fR argument can be an
absolute number of seconds (\f(CW938.42\fR), or use suffixes such as \f(CW\*(C`100s\*(C'\fR,
\&\f(CW\*(C`12ms\*(C'\fR, \f(CW\*(C`1.5min\*(C'\fR, \f(CW\*(C`2hr\*(C'\fR, and so forth.
.IP "\fB\-\-start\-time\fR=\fItime\fR" 4
.IX Item "--start-time=time"
Ignore packets with timestamps less than \fItime\fR.
.IP "\fB\-\-interval\fR=\fItime\fR, \fB\-t\fR \fItime\fR" 4
.IX Item "--interval=time, -t time"
Stop after recording aggregate information for \fItime\fR worth of packets.
That is, if the first recorded packet has timestamp T, then \fBipaggcreate\fR
will exit just before the first packet with timestamp T+\fItime\fR, or the end
of the trace, whichever comes first.
.IP "\fB\-\-limit\-labels\fR=\fBcount\fR" 4
.IX Item "--limit-labels=count"
Stop after recording information for \fBcount\fR distinct labels.  That is,
exit just before encountering a packet with the \fBcount\fR+1 different
label, or at the end of the trace, whichever comes first.
.PP
The four \fB\-\-split\fR options generate multiple aggregate output files based
on characteristics of the input.  To use \fB\-\-split\fR, you must supply an
explicit \fB\-\-output\fR filename containing a "\f(CW%d\fR"\-style template; a file
number is plugged in to that template.  For example, the template
\&\f(CW\*(C`file%03d.txt\*(C'\fR will generate files \f(CW\*(C`file001.txt\*(C'\fR, \f(CW\*(C`file002.txt\*(C'\fR, and so
forth.
.IP "\fB\-\-split\-time\fR=\fBtime\fR" 4
.IX Item "--split-time=time"
Start a new output file every \fBtime\fR period.  That is, each file will
contain data for at most \fBtime\fR worth of packets.
.IP "\fB\-\-split\-labels\fR=\fBcount\fR" 4
.IX Item "--split-labels=count"
Start a new output file every \fBcount\fR distinct labels.  That is, each file
will contain at most \fBcount\fR different labels.
.IP "\fB\-\-split\-packets\fR=\fBcount\fR" 4
.IX Item "--split-packets=count"
Start a new output file every \fBcount\fR packets.
.IP "\fB\-\-split\-bytes\fR=\fBcount\fR" 4
.IX Item "--split-bytes=count"
Start a new output file every \fBcount\fR bytes.
.SS "Other Options"
.IX Subsection "Other Options"
.IP "\fB\-\-output\fR=\fIfile\fR, \fB\-o\fR \fIfile\fR" 4
.IX Item "--output=file, -o file"
Write the summary dump to \fIfile\fR instead of to the standard output.
.IP "\fB\-\-binary\fR, \fB\-b\fR" 4
.IX Item "--binary, -b"
Write the summary dump in binary format. See below for more information.
.IP "\fB\-\-write\-tcpdump\fR=\fIfile\fR, \fB\-w\fR \fIfile\fR" 4
.IX Item "--write-tcpdump=file, -w file"
Write processed packets to a \fItcpdump\fR\|(1) \fIfile\fR \*(-- or to the standard
output, if \fIfile\fR is a single dash \f(CW\*(C`\-\*(C'\fR \*(-- in addition to the usual
summary output.
.IP "\fB\-\-filter\fR=\fIfilter\fR, \fB\-f\fR \fIfilter\fR" 4
.IX Item "--filter=filter, -f filter"
Only include packets and flows matching a \fItcpdump\fR\|(1) filter. For example,
`ipsumdump \fB\-f\fR \*(L"tcp && src net 18/8\*(R"' will summarize data only for \s-1TCP\s0
packets from net 18. (The syntax for \fIfilter\fR is currently a subset of
tcpdump's syntax.)
.IP "\fB\-\-anonymize\fR, \fB\-A\fR" 4
.IX Item "--anonymize, -A"
Anonymize \s-1IP\s0 addresses in the output. The anonymization preserves prefix
and class. This means, first, that two anonymized addresses will share the
same prefix when their non-anonymized counterparts share the same prefix;
and second, that anonymized addresses will be in the same class (A, B, C,
or D) as their non-anonymized counterparts. The anonymization algorithm
comes from \fItcpdpriv\fR\|(1); it works like `tcpdpriv \fB\-A50 \-C4\fR'.
.Sp
If \fB\-\-anonymize\fR and \fB\-\-write\-tcpdump\fR are both on, the \fBtcpdump\fR output
file will have anonymized \s-1IP\s0 addresses. However, the file will contain
actual packet data, unlike \fBtcpdpriv\fR output.
.IP "\fB\-\-no\-promiscuous\fR" 4
.IX Item "--no-promiscuous"
Do not place interfaces into promiscuous mode. Promiscuous mode is the
default.
.IP "\fB\-\-sample\fR=\fIp\fR" 4
.IX Item "--sample=p"
Sample packets with probability \fIp\fR. That is, \fIp\fR is the chance that a
packet will cause output to be generated. The actual probability may differ
from the specified probability, due to fixed point arithmetic; check the
output for a `\f(CW\*(C`!sampling_prob\*(C'\fR' comment to see the real probability.
Strictly speaking, this option samples records, not packets, so for NetFlow
summaries without \fB\-\-multipacket\fR, it will sample flows.
.IP "\fB\-\-multipacket\fR" 4
.IX Item "--multipacket"
Supply this option if you are reading NetFlow or \s-1IP\s0 summaries \*(-- files
where each record might represent multiple packets \*(-- and you would like
the output summary to have one line per packet, instead of the default one
line per record. See also \fB\-\-packet\-count\fR, above.
.IP "\fB\-\-collate\fR" 4
.IX Item "--collate"
Sort output packets by increasing timestamp. Use this option when reading
from multiple \fItcpdump\fR\|(1) files to ensure that the output has sorted
timestamps. Combine \fB\-\-collate\fR with \fB\-\-write\-tcpdump\fR to collate
overlapping \fItcpdump\fR\|(1) files into a single, sorted \fItcpdump\fR\|(1) file.
.IP "\fB\-\-random\-seed\fR=\fIseed\fR" 4
.IX Item "--random-seed=seed"
Set the random seed deterministically to \fIseed\fR, an unsigned integer. By
default, the random seed is initialized to a random value using
\&\fI/dev/random\fR, if it exists, combined with other data. The random seed
indirectly determines which packets are sampled, and the values of
anonymized \s-1IP\s0 addresses.
.IP "\fB\-\-quiet\fR, \fB\-q\fR" 4
.IX Item "--quiet, -q"
Do not print a progress bar to standard error. This is the default when
\&\fBipsumdump\fR isn't running interactively.
.IP "\fB\-\-config\fR" 4
.IX Item "--config"
Do not produce a summary. Instead, write the Click configuration that
\&\fBipsumdump\fR would run to the standard output.
.IP "\fB\-\-verbose\fR, \fB\-V\fR" 4
.IX Item "--verbose, -V"
Produce more verbose error messages.
.IP "\fB\-\-help\fR, \fB\-h\fR" 4
.IX Item "--help, -h"
Print a help message to the standard output, then exit.
.IP "\fB\-\-version\fR, \fB\-v\fR" 4
.IX Item "--version, -v"
Print version number and license information to the standard output, then
exit.
.SH "SIGNALS"
.IX Header "SIGNALS"
When killed with \s-1SIGTERM\s0 or \s-1SIGINT, \s0\fBipaggcreate\fR will exit cleanly (and
generate an output file).  If you want it to flush its buffers without
exiting, kill it with \s-1SIGHUP.\s0
.SH "BINARY FORMAT"
.IX Header "BINARY FORMAT"
Binary ipaggcreate files begin with several \s-1ASCII\s0 lines, just like regular
ipaggcreate files.  A line `\f(CW\*(C`!packed_be\*(C'\fR' or `\f(CW\*(C`!packed_le\*(C'\fR' indicates
that the rest of the file, starting immediately after the newline, consists
of binary records (in big-endian or little-endian order, respectively).
Each record is 8 bytes long, and looks like this:
.PP
.Vb 4
\&   +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&   |     label     |     count     |
\&   +\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&    <\-\-\-4 bytes\-\-\-> <\-\-\-4 bytes\-\-\->
.Ve
.PP
The initial word of data contains the label number, the second the count.
.SH "CLICK"
.IX Header "CLICK"
The \fBipaggcreate\fR program uses the Click modular router, an extensible
system for processing packets.  Click routers consist of \*(C+ components
called elements.  While some elements run only in a Linux kernel, most can
run either in the kernel or in user space, and there are user-level
elements for reading packets from libpcap or from tcpdump files.
.PP
\&\fBIpaggcreate\fR creates and runs a user-level Click configuration.  However,
you don't need to install Click to run \fBipsumdump\fR; the \fIlibclick\fR
directory contains all the relevant parts of Click, bundled into a library.
.PP
If you're curious, try running `ipaggcreate \fB\-\-config\fR' with some other
options to see the Click configuration \fBipsumdump\fR would run.
.PP
This is, I think, a pleasant way to write a packet processor!
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItcpdump\fR\|(1), \fItcpdpriv\fR\|(1), \fIclick\fR\|(1), \fIipsumdump\fR\|(1)
.PP
See http://www.pdos.csail.mit.edu/click/ for more on Click.
.SH "AUTHOR"
.IX Header "AUTHOR"
Eddie Kohler <kohler@cs.ucla.edu>, based on the Click modular router.
.PP
Anonymization algorithm from \fItcpdpriv\fR\|(1) by Greg Minshall.
