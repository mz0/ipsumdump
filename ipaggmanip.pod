=head1 NAME

ipaggmanip - manipulate aggregate statistics, often of network traffic

=head1 SYNOPSIS

ipaggmanip [transformation options...] [I<file>] > I<output>

=head1 DESCRIPTION

The B<ipaggmanip> program reads an aggregate file summarizing IP trace data
(or other data), transforms that file or calculates one of its statistics,
and writes the result to standard output.  Aggregate files use the format
produced by L<ipaggcreate(1)>, and can be text or binary.

An aggregate file consists of pairs of I<labels> and I<counts>.  The
resulting dataset is modeled either as a partial function mapping labels to
counts, or as a multiset of labels.  Elements of the multiset are called
"packets" for convenience, although counts need not correspond to network
packets.  For example, the B<--sample> option is described as sampling
"packets"; this means that the aggregate file is treated as a multiset of
labels, and each element of the multiset is dropped with a uniform
probability.  When an option refers explicitly to a "label", the partial
function representation is assumed.  Thus, the B<--num-labels> option
reports the number of labels.  This is the same as the number of labels
whose count is greater than 0, since labels with 0 counts are left out of
the partial function.

Several options refer to "I<p>-aggregates".  A I<p>-aggregate consists of a
set of labels whose high-order I<p> bits are the same.  Labels are 32 bits
long, so a 32-aggregate is the same as a label.  Consider an aggregate file
with the following data:

  0 3
  1 2
  2 1

This file contains two 31-aggregates, as follows:

  0 5    # combines labels 0 and 1
  2 1    # only label 2

A I<p>-aggregate label has the lower 32-I<p> bits set to zero.

=head1 OPTIONS

=head2 Transformations

Transformation options change an aggregate file into another aggregate
file.  You may supply several transformation options; they are applied in
order.  Thus, for example, `ipaggmanip B<--prefix> 16 B<--posterize>' will
read an aggregate file, aggregate to prefix level 16, and then replace all
nonzero counts with 1.  This has the same effect as `ipaggmanip B<--prefix>
16 | ipaggmanip B<--posterize>'.

=over 4

=item B<--prefix> I<p>, B<-p> I<p>

Aggregates to prefix level I<p>.  That is, replaces each label with its
I<p>-aggregate's label and outputs the result.  The counts from any labels
in the same aggregate are combined.

=item B<--posterize>, B<-P>

Replaces each label's (nonzero) count with 1.

=item B<--sample> I<n>

Sample packets with uniform random probability 1/I<n>.  The output will
have roughly I<n> times fewer packets compared with the input.

=item B<--cull> I<n>

Reduce the input to at most I<n> packets by randomly sampling packets.
Input aggregates with no more than I<n> packets are output unchanged.

=item B<--cull-labels> I<n>

Reduce the input to at most I<n> labels by randomly sampling labels.  Input
aggregates with I<n> or fewer labels are output unchanged.  If a label is
included in the output, then its count is the same as in the input.

=item B<--cull-labels-by-packets> I<n>

Reduce the input to at most I<n> labels by randomly sampling I<packets>.
That is, throw away packets one at a time until the aggregate has at most
I<n> labels.  Input aggregates with I<n> or fewer labels are output
unchanged.  Labels included in the output may have lower counts than in the
input because of the packet sampling.

=item B<--cut-smaller> I<n>

Drop labels with count less than I<n>.  Other labels are left unchanged.

=item B<--cut-larger> I<n>

Drop labels with count greater than or equal to I<n>.

=item B<--cut-smaller-aggregates> I<p>,I<n>

Drop all labels whose containing I<p>-aggregates contain less than I<n>
packets.  For instance, given this input:

  0 1
  1 3
  2 1
  3 1

the `B<--cut-smaller-aggregates> 31,3' option would produce:

  0 1
  1 3

Labels 2 and 3 have been dropped because their shared 31-aggregate contains
only 2 packets.

=item B<--cut-larger-aggregates> I<p>,I<n>

Drop all labels whose containing I<p>-aggregates contain greater than or
equal to I<n> packets.

=item B<--cut-smaller-label-aggregates> I<p>,I<n>

Drop all labels whose containing I<p>-aggregates contain greater than or
equal to I<n> labels.  For instance, given this input:

  0 1
  1 1
  2 1
  4 1
  5 1

the `B<--cut-smaller-label-aggregates> 30,3' option would produce:

  0 1
  1 1
  2 1

Labels 4 and 5 have been dropped because their shared 30-aggregate contains
only 2 labels.

=item B<--cut-larger-label-aggregates> I<p>,I<n>

Drop all labels whose containing I<p>-aggregates contain greater than or
equal to I<n> labels.

=item B<--fake-by-discriminating-prefixes>[=I<type>]

=item B<--fake-by-branching-counts>

=item B<--fake-by-dirichlet>

=item B<--remap-prefixes> I<arg>

=back

=head2 Actions

Action options calculate a statistic from an aggregate file and output that
statistic.  Each B<ipaggmanip> run can contain at most one action.  Unless
otherwise noted, statistics containing multiple numbers are output on one
line, separated by spaces.

=over 4

=item B<--num-labels>, B<-n>

Output the number of labels.

=item B<--num-in-prefixes>

Output the number of active I<p>-aggregates for each I<p>, 0<=I<p><=32.
The result is 33 space-separated numbers; the first is the number of active
0-aggregates, the last the number of active 32-aggregates (that is, the
number of labels).  The I<p>th number is at most 2^I<p>.

=item B<--num-in-left-prefixes>

Output the number of active left-hand I<p>-aggregates for each I<p>,
0<=I<p><=32.  A left-hand I<p>-aggregate has its lowest-order bit equal to
0.  Consider label 6, which identifies a 32-aggregate and a 31-aggregate.
(It does not identify a 30-aggregate or above.)  Label 6 is a left-hand
32-aggregate, since bit 31 is 0, but it is I<right>-hand 31-aggregate,
since bit 30 is 1.  As a special case, the single 0-aggregate is considered
left-hand.  The result is 33 space-separated numbers, as in
B<--num-in-prefixes>.

=item B<--discriminating-prefix-counts>

Output the number of labels that have discriminating prefix I<p> for each
I<p>, 0<=I<p><=32.  The discriminating prefix for a label I<L> is the
smallest I<p> so that the I<p>-aggregate containing I<L> contains no other
label.  The result is 33 space-separated numbers whose sum will equal
B<--num-labels>.

=item B<--all-discriminating-prefix-counts>

The output is 33 lines, numbered 0 through 32.  Line number I<p> equals the
result of `B<--prefix> I<p> B<--discriminating-prefix-counts>' for the
input data: that is, the discriminating prefixes for the data's
I<p>-aggregates.  The discriminating prefix for a I<p>-aggregate must be
less than or equal to I<p>, so line I<p> contains I<p>+1 space-separated
numbers.

=item B<--counts>

Output the count for each active label, sorted in label order.  The result
is B<--num-labels> space-separated numbers.

=item B<--sorted-counts>

Output the count for each active label, sorted in descending order by
count.  The result is B<--num-labels> space-separated numbers.

=item B<--count-counts>

For each count I<c>, calculate I<n>, the number of labels that have count
I<c>.  Output a series of lines containing "I<c> I<n>", sorted in ascending
order by I<c>.

=item B<--container-counts> I<p>

Calculate the number of packets in each label's containing I<p>-aggregate.
Output each active label's value, sorted in label order.  The result is
B<--num-labels> space-separated numbers.

=item B<--balance> I<p>

=item B<--average-and-variance>

=item B<--average-and-variance-by-prefix>

=item B<--haar-wavelet-energy>

=item B<--balance> I<n>

=item B<--balance-histogram> I<n>,I<nbuckets>

=item B<--branching-counts> I<p>,I<step>

=item B<--all-branching-counts> I<step>

=item B<--conditional-split-counts> I<p>

=item B<--correlation-size-container-addresses> I<p>

=back

=head2 Multiple files

=over 4

=item B<--each>, B<-e>

=item B<--or>, B<-|>

=item B<--and>, B<-&>

=item B<--minus>

=item B<--xor>, B<-^>

=item B<--and-list>

=item B<--assign-counts>

=back

=head2 Other options

=over 4

=item B<--read> I<file>, B<-r> I<file>

=item B<--output> I<file>, B<-o> I<file>

=item B<--binary>, B<-b>

=item B<--text>

=item B<--ip>

=item B<--help>, B<-h>

Print a help message to the standard output, then exit.

=item B<--version>, B<-v>

Print version number and license information to the standard output, then
exit.

=back

=head1 SEE ALSO

ipaggcreate(1), tcpdump(1), tcpdpriv(1), click(1), ipsumdump(1)

See http://www.pdos.csail.mit.edu/click/ for more on Click.

=head1 AUTHOR

Eddie Kohler <kohler@cs.ucla.edu>, based on the Click modular router.
